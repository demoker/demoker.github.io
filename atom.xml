<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>demoker</title>
  <subtitle>小马哥</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://demoker.co/"/>
  <updated>2016-09-30T01:30:59.000Z</updated>
  <id>http://demoker.co/</id>
  
  <author>
    <name>demoker－小马哥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自动打包，上传服务器</title>
    <link href="http://demoker.co/2016/09/29/AutoPackage/"/>
    <id>http://demoker.co/2016/09/29/AutoPackage/</id>
    <published>2016-09-29T10:27:51.000Z</published>
    <updated>2016-09-30T01:30:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.配置：在工程所在目录下PackageShell文件夹，其中包括一个package文件夹（存放打包后的相关文件）、PackageConfig文件夹（其中存放app的相关配置.plist）</p>
<p>2.运行.sh脚本：进入到所在文件夹下，然后./name.sh 敲回车，这样就运行了</p>
<p>3.脚本content：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">profile_Name=`/usr/libexec/PlistBuddy -c &quot;print profile_Name&quot; ./PackageConfig/xx.plist`</div><div class="line">ipa_Name=`/usr/libexec/PlistBuddy -c &quot;print app_Name&quot; ./PackageConfig/xx.plist`</div><div class="line">cd ../xxprojectName</div><div class="line">echo &quot;go to xxprojectName workspace path&quot;</div><div class="line">#</div><div class="line">#buildDay=$(date +%Y%m%d)</div><div class="line">buildTime=$(date +%Y%m%d%H%M)</div><div class="line">profile=&quot;$&#123;profile_Name&#125;&quot;</div><div class="line">echo $profile $ipa_Name</div><div class="line">if [ ! -d &quot;../PackageShell/Package&quot; ]; then</div><div class="line">mkdir ../PackageShell/Package</div><div class="line">fi</div><div class="line">if [ ! -d &quot;../PackageShell/Package/ArchiveProduction&quot; ]; then</div><div class="line">mkdir ../PackageShell/Package/ArchiveProduction</div><div class="line">fi</div><div class="line">if [ ! -d &quot;../PackageShell/Package/ArchiveProduction/QA&quot; ]; then</div><div class="line">mkdir ../PackageShell/Package/ArchiveProduction/QA</div><div class="line">echo &quot;Create ArchiveProduction path&quot;</div><div class="line">fi</div><div class="line">if [ ! -d &quot;../PackageShell/Package/ipa&quot; ]; then</div><div class="line">mkdir ../PackageShell/Package/ipa</div><div class="line">fi</div><div class="line">if [ ! -d &quot;../PackageShell/Package/ipa/QA&quot; ]; then</div><div class="line">mkdir ../PackageShell/Package/ipa/QA</div><div class="line">echo &quot;Create ipa path&quot;</div><div class="line">fi</div><div class="line">#</div><div class="line">buildConfiguration=&quot;QA&quot;</div><div class="line">buildPath=&quot;../PackageShell/Package/ArchiveProduction/QA/$&#123;ipa_Name&#125;_$&#123;buildTime&#125;.xcarchive&quot;</div><div class="line">#ipaName=&quot;../PackageShell/Package/ipa/QA/$&#123;ipa_Name&#125;_$&#123;buildTime&#125;.ipa&quot;</div><div class="line">ipaName=&quot;../PackageShell/Package/ipa/QA/$&#123;ipa_Name&#125;.ipa&quot;</div><div class="line">xctool -workspace xxprojectName.xcworkspace -scheme xxprojectName -configuration $&#123;buildConfiguration&#125; clean</div><div class="line">xctool -workspace xxprojectName.xcworkspace -scheme xxprojectName -configuration $&#123;buildConfiguration&#125; archive -archivePath $&#123;buildPath&#125;</div><div class="line">xcodebuild -exportArchive -exportFormat IPA -archivePath $&#123;buildPath&#125; -exportPath $&#123;ipaName&#125; -exportProvisioningProfile &quot;$profile&quot;</div></pre></td></tr></table></figure></p>
<p>4.针对部署下面进行研究：</p>
<p>方式一：</p>
<p>使用curl 上传文件，示例代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#上传到蒲公英</div><div class="line">curl -F &quot;file=@&quot;$&#123;ipaName&#125; \</div><div class="line">-F &quot;uKey=7a293adb2ae692594483b846bfc4ddc8&quot; \</div><div class="line">-F &quot;_api_key=9440f27246757ebc2b92286186b4690b&quot; \</div><div class="line">https://www.pgyer.com/apiv1/app/upload</div></pre></td></tr></table></figure></p>
<p>方式二：</p>
<p>mattt大神的－－SHENZHEN</p>
<p>安装：<br><figure class="highlight plain"><figcaption><span>gem install shenzhen ```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">具体使用方法详见[git](https://github.com/nomad/shenzhen)</div><div class="line"></div><div class="line">下面针对FIR、蒲公英和FTP给予使用说明：</div><div class="line"></div><div class="line">FTP Distribution</div><div class="line"></div><div class="line">``` $ ipa distribute:ftp --host HOST -u USER -p PASSWORD -P FTP_PATH</div></pre></td></tr></table></figure></p>
<p>蒲公英 (PGYER)</p>
<p><code>$ ipa distribute:pgyer -u USER_KEY -a APP_KEY</code></p>
<p>FIR</p>
<p><code>$ ipa distribute:fir -u USER_TOKEN -a APP_ID</code> </p>
<p>以上脚本中使用到xctool，xctool是facebook对xcodebuild的封装.</p>
<p>参考blog：</p>
<p><a href="http://liumh.com/2015/11/25/ios-auto-archive-ipa/" target="_blank" rel="external">iOS自动打包并发布脚本</a></p>
<p><a href="http://www.anselz.com/2014/10/30/ios-开发自动打包/" target="_blank" rel="external">iOS开发自动打包</a></p>
<p><a href="http://www.vienta.me/2016/02/24/iOS批量自动打包和部署-Ⅱ-自动打包/" target="_blank" rel="external">iOS批量自动打包和部署(Ⅱ):自动打包</a></p>
<p><a href="https://github.com/nomad/shenzhen" target="_blank" rel="external">shenzhen</a></p>
<p><a href="http://blog.csdn.net/u010124617/article/details/46547523" target="_blank" rel="external">多渠道批量打包</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.配置：在工程所在目录下PackageShell文件夹，其中包括一个package文件夹（存放打包后的相关文件）、PackageConfig文件夹（其中存放app的相关配置.plist）&lt;/p&gt;
&lt;p&gt;2.运行.sh脚本：进入到所在文件夹下，然后./name.sh 敲回车
    
    </summary>
    
    
      <category term="自动打包 ipa" scheme="http://demoker.co/tags/%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85-ipa/"/>
    
  </entry>
  
  <entry>
    <title>MicrometerLevelFormat</title>
    <link href="http://demoker.co/2016/09/29/MicrometerLevelFormat/"/>
    <id>http://demoker.co/2016/09/29/MicrometerLevelFormat/</id>
    <published>2016-09-29T10:21:08.000Z</published>
    <updated>2016-09-29T10:23:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>##概述：<br>MicrometerLevelFormat是一个对于UITextField实现的数字千分位功能的类别。<a href="https://github.com/demoker/MicrometerLevelFormat" target="_blank" rel="external">链接</a></p>
<p>##使用方法：<br>1.添加UITextField+MicrometerLevelFormat到项目工程<br>2.在textField delegate方法中打开千分位功能即可，示例代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string&#123;</div><div class="line">    [textField openMicrometerLevelFormat];</div><div class="line">    return YES;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>备注：textfiled的键盘类型必须是数字键盘，因为这里千分位的功能只对数字起作用。😁😁😁</p>
<p><em>欢迎大家使用哟！多交流</em>  附上本人QQ：909352358</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##概述：&lt;br&gt;MicrometerLevelFormat是一个对于UITextField实现的数字千分位功能的类别。&lt;a href=&quot;https://github.com/demoker/MicrometerLevelFormat&quot; target=&quot;_blank&quot; re
    
    </summary>
    
    
      <category term="千分位 iOS UITextField" scheme="http://demoker.co/tags/%E5%8D%83%E5%88%86%E4%BD%8D-iOS-UITextField/"/>
    
  </entry>
  
  <entry>
    <title>iOS Tips</title>
    <link href="http://demoker.co/2016/09/29/iOS-Tips/"/>
    <id>http://demoker.co/2016/09/29/iOS-Tips/</id>
    <published>2016-09-29T09:35:10.000Z</published>
    <updated>2016-09-30T01:56:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目开发过程中遇到的bug总结"><a href="#项目开发过程中遇到的bug总结" class="headerlink" title="项目开发过程中遇到的bug总结"></a>项目开发过程中遇到的bug总结</h1><ol>
<li><strong>iOS app通过itunes共享文件</strong><br>在程序的配置文件中添加<code>Application supports iTunes file sharing</code>,设置为YES；这里共享的是沙河的Document目录</li>
<li><strong>DZNEmptyDataSet使用心得</strong><br> 同mj刷新一起使用的时候，一定要先endrefresh方法，然后再去刷新tableview，因为DZNEmptyDataSet是在reload数据的时候获取tableview的偏移和bounds，然后去设置空视图的位置的，如果先reload，则会导致空视图空视图显示出来的时候往上偏了54像素，54从哪里冒出来的呢？全局搜了一下，发现mj刷新正在pulling的时候正好54。</li>
<li>个人认为开发中涉及到<strong>系统权限</strong>的应该统一放在一起，放在一个文件中。</li>
<li><p>CocoaLumberjack <strong>自定义logger</strong>输出样式</p>
<ol>
<li>首先自定义一个类似DDLogFileFormatterDefault的formatter作为格式输出，实例化一个fomatter；</li>
<li>自定义一个ddloger，继承于DDAbstractDatabaseLogger,重载db_log、db_save,添加post服务器方法；将第一步创建的formatter赋值给ddloger的formatter属性；</li>
<li><p>nslog打印</p>
<p>注意：<br>DDLog：基础类，必须引入的。<br>DDASLLogger：支持将调试语句写入到苹果的日志中。一般正对Mac开发。可选。<br>DDTTYLogger：支持将调试语句写入xCode控制台。我们即使要用它。可选。<br>DDFileLogger：支持将调试语句写入到文件系统。可选。<br>DDLog的输出级别默认提供以下若干种：<br>DDLogError：定义输出错误文本<br>DDLogWarn：定义输出警告文本<br>DDLogInfo：定义输出信息文本<br>DDLogDebug：定义输出调试文本<br>DDLogVerbose：定义输出详细文本</p>
<p>提供的日志级别为：<br>LOG_LEVEL_ERROR：只显示错误日志。<br>LOG_LEVEL_WARN：包括：LOG_LEVEL_ERROR<br>LOG_LEVEL_INFO：包括：LOG_LEVEL_WARN<br>LOG_LEVEL_DEBUG：包括：LOG_LEVEL_INFO<br>LOG_LEVEL_VERBOSE：包括：LOG_LEVEL_DEBUG<br>LOG_LEVEL_OFF：关闭日志<br>level ＝ LOG_LEVEL_VERBOSE的时候，以上所有的level的打印日志都会进行打印，在appdelegate中添加多少个logger，就会形成几种情况的日志，譬如：文件、数据库、控制台等，添加自定义的之后便会增加一种日志形式（自定义的上传给服务器的日志）<br>问题:</p>
</li>
<li>日志文件logger只会存入error和warning的日志吗？</li>
<li>日志文件只有一个吗？如果不是，什么时候就会创建？</li>
</ol>
</li>
<li><p><strong>category中添加成员变量</strong><br> .h</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@property (nonatomic, retain) 	LBEmptyPageView * emptyView;</div><div class="line">@property (assign, nonatomic) BOOL 	showNetError;</div></pre></td></tr></table></figure>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">static const void * emptyViewKey = 	&amp;emptyViewKey;</div><div class="line"></div><div class="line">@implementation BaseViewController 	(EmptyDataSet)</div><div class="line">- (LBEmptyPageView *)emptyView &#123;</div><div class="line">   return objc_getAssociatedObject(self, 	&amp;emptyViewKey);</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (void)setEmptyView:(LBEmptyPageView *)emptyView &#123;</div><div class="line"> 	  objc_setAssociatedObject(self, 	emptyViewKey, emptyView, 	OBJC_ASSOCIATION_RETAIN_NONATOMIC);</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (BOOL)showNetError&#123;</div><div class="line">	   return 	[objc_getAssociatedObject(self, _cmd) 	boolValue];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (void)setShowNetError:	(BOOL)showNetError&#123;</div><div class="line">   objc_setAssociatedObject(self, @selector(showNetError), @(showNetError), OBJC_ASSOCIATION_ASSIGN);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>category使用原则：</p>
<ol>
<li>category的实现可以依赖主类，但主类一定不依赖category，也就是移除一个category的代码不会对主类产生影响</li>
<li>category可以直接食用主类已有的私有成员变量，但不应该为实现catecory而在主类中添加成员变量，考虑通过上述的方式实现。</li>
</ol>
</blockquote>
</li>
<li><p>在用<strong>xib自定义tableview的头部</strong>时候，有时会出现当我NSbundle实例化之后改变它的frame不管用，这个可能xcode的bug或者是缓存问题，删掉重新搞</p>
</li>
<li>之前碰到一个问题就是<strong>缺少库的问题</strong>，第一次显示缺AFNetWorking，我将AFNetWorking从cocoapods中删除手动添加之后，它又会报其它库的错误，一般这种问题就是因为路径的问题，这里奉上解决方法：library search path 设置：$(inherited)</li>
<li><strong>iOS7报错信息：</strong>Library not loaded: /System/Library/Frameworks/Photos.framework/Photos<br> Referenced from: /var/mobile/Applications/E19A46C1-C0EC-4DC3-A9CE-DC84811DD7E8/xxxx.app<br> Reason: image not found<br> 解决方案：You need to weak link Photos.framework, not ALAssetsLibrary! Xcode -&gt; Targets -&gt; YourTargetName -&gt; Build Phases -&gt; Link Binary With Libraries -&gt; Set Photos.framework to Optional.</li>
<li><p><strong>图片裁剪</strong>：可以实现美食杰启动页图片上下分开动画效果</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CGImageCreateWithImageInRect(image.CGImage, CGRectMake(0, image.size.height *0.5, image.size.width, image.size.height *0.5))</div></pre></td></tr></table></figure>
</li>
<li><p><strong>播放GIF比较好的库</strong>：FlipBoard出品的<a href="https://github.com/Flipboard/FLAnimatedImage" target="_blank" rel="external">FLAnimatedImage</a></p>
</li>
<li><strong>time profilter部分专词意思</strong><br>Separate by Thread：按线程分开做分析，这样更容易揪出那些吃资源的问题线程。特别是对于主线程，它要处理和渲染所有的接口数据，一旦受到阻塞，程序必然卡顿或停止响应。<br>Invert Call Tree：反向输出调用树。把调用层级最深的方法显示在最上面，更容易找到最耗时的操作。<br>Hide Missing Symbols：隐藏缺失符号。如果 dSYM 文件或其他系统架构缺失，列表中会出现很多奇怪的十六进制的数值，用此选项把这些干扰元素屏蔽掉，让列表回归清爽。<br>Hide System Libraries：隐藏系统库文件。过滤掉各种系统调用，只显示自己的代码调用。<br>Flattern Recursion：拼合递归。将同一递归函数产生的多条堆栈（因为递归函数会调用自己）合并为一条。<br>Top Functions：找到最耗时的函数或方法。</li>
<li><p><strong>NSSortDescriptor</strong></p>
<pre><code>通过它可以实现数组内模型根据某一个字段或者多个进行排序，示例代码如下：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//按年龄和名字排序,如果碰到年龄相等的，则根据名字排序</div><div class="line">   NSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:@&quot;_age&quot; ascending:NO];</div><div class="line">   NSSortDescriptor *sortDescriptorName = [[NSSortDescriptor alloc] initWithKey:@&quot;_name&quot; ascending:NO];</div><div class="line">   NSArray *sortDescriptors = [NSArray arrayWithObjects:sortDescriptor, sortDescriptorName, nil];</div><div class="line">   [_mutArrVideo sortUsingDescriptors:sortDescriptors];</div></pre></td></tr></table></figure>
</li>
<li><p><strong>获取数字数组中的最大项和最小项</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">NSArray * arr = [NSArray arrayWithObjects:@&quot;10&quot;,@&quot;50&quot;,@&quot;9&quot;, nil];</div><div class="line">NSInteger max = [[arr valueForKeyPath:@&quot;@max.intValue&quot;] integerValue];</div></pre></td></tr></table></figure>
</li>
<li><p><strong>非主线程执行UI操作检测工具</strong><br><a href="https://gist.github.com/steipete/5664345" target="_blank" rel="external">PSPDFUIKitMainThreadGuard.m</a></p>
</li>
<li><p><strong>奇怪矩阵</strong><br>控制台打印：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;Error&gt;: CGAffineTransformInvert: singular matrix.</div><div class="line">May 11 16:19:48  LBAssistant[4704] &lt;Error&gt;: 	CGAffineTransformInvert: singular matrix.</div><div class="line">May 11 16:19:48  LBAssistant[4704] &lt;Error&gt;: 	CGAffineTransformInvert: singular matrix.</div></pre></td></tr></table></figure>
<p>并且相机黑屏，但是拍到的照片是存在的，只是黑屏，<br> bug猜测原因是：UIActionsheet的问题，更换自定义的就没事儿了，但心里还是觉得此问题不简单，另有他因，还待高人指点。</p>
</li>
<li><strong>cell计算高度卡顿</strong><br>xib布局的自定义cell第一次计算高度卡顿2s，其原因是：布局中lable使用了第三方字体（黑体），非系统字体</li>
<li><p><strong>brew update 出错：Error: /usr/local must be writable!​ 解决方案：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo chgrp -R admin /usr/local</div><div class="line">sudo chmod -R g+w /usr/local</div></pre></td></tr></table></figure>
</li>
<li><p><strong>关于写入权限的问题</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chown demoker /Library/Caches/Homebrew</div></pre></td></tr></table></figure>
<p>demoker 是你当前用户名，后面的是你受权限限制的文件目录</p>
</li>
<li><p><strong>关于<a href="https://github.com/johnno1962/injectionforxcode" target="_blank" rel="external">injectionforXcode</a> 使用时碰到的问题</strong></p>
<ol>
<li><p>真机运行<br> 解决方法：在main.m或者.pch中添加👇代码:</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#ifdef DEBUG</div><div class="line">	static char _inMainFilePath[] = __FILE__;</div><div class="line">	static const char *_inIPAddresses[] = &#123;&quot;192.168.83.47&quot;, &quot;127.0.0.1&quot;, 0&#125;;</div><div class="line">	//👆两个声明可加可不加</div><div class="line">	#define INJECTION_ENABLED</div><div class="line">	#import &quot;/tmp/injectionforxcode/BundleInjection.h&quot;</div><div class="line">#endif</div></pre></td></tr></table></figure>
</li>
<li><p>Could not codesign as ‘iPhone Developer’:/Users/…<br> <img src="media/14628516276691/tip_19.png" alt="tip_19 -w400 ">              </p>
<p> issue图片中写得很清楚了证书到底是图中两个证书里面的哪一个，        解决方法就是修改iOSInjectionProject/x86_64/identity.txt 文件中证书为正确的那一个即可，这样就可以使用    这个插件了😄。<a href="https://github.com/johnno1962/injectionforxcode/issues/41" target="_blank" rel="external">参考</a></p>
</li>
</ol>
</li>
<li><p><strong>synx 同步iOS工程目录</strong><br>Xcode下面直接创建Group时在本地项目文件夹中并不会形成实体文    件夹，通过synx可以将Group目录同步。使用：</p>
<pre><code>1. 安装
<figure class="highlight plain"><figcaption><span>gem install synx```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">2. 使用</div><div class="line">```synx your path</div></pre></td></tr></table></figure>
</code></pre><blockquote>
<pre><code>CocoaPods管理的库要重新pod install一次，手动添加的    Framework也要重新添加。
</code></pre></blockquote>
</li>
<li><p>Realm pod install 失败</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[!] /bin/bash -c</div><div class="line">set -e</div><div class="line">sh build.sh cocoapods-setup</div><div class="line"></div><div class="line">core is not a symlink. Deleting...</div><div class="line">Downloading dependency: core 1.0.1</div><div class="line">Downloading core failed:</div><div class="line">curl: (56) SSLRead() return error -36</div></pre></td></tr></table></figure>
<p>解决方法：</p>
<pre><code><figure class="highlight plain"><figcaption><span>-rf Pods```，删除工程目录下的pods文件夹，然后重新	 pod install，安装Realm的时候会慢一些，等了很长时间...解决方法参考链接[🔗](https://github.com/realm/realm-cocoa/issues/2713)</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
</code></pre><p>curl <a href="https://static.realm.io/downloads/core/realm-core-1.0.1.tar.bz2" target="_blank" rel="external">https://static.realm.io/downloads/core/realm-core-1.0.1.tar.bz2</a> -O<br>mkdir $TMPDIR/core_bin<br>mv realm-core-1.0.1.tar.bz2 $TMPDIR/core_bin</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">22. 子类是可以调用父类xib文件进行实例化的，例如LBWebViewController</div><div class="line">23. sublime 插件安装方法：[链接](https://packagecontrol.io/installation#st3)</div><div class="line"></div><div class="line">	  1. ```ctrl+ ` ```,打开console，执行```simple```中的命令，即可</div><div class="line"></div><div class="line">	  2. 安装完```package control.sublime-package```,就可以安装其他插件了</div><div class="line">	 </div><div class="line">	  3. ```shift＋command＋p``` 找到```install package```命令，回车，然后输入需要安装的插件名称，再回车就可以了</div><div class="line">24. realm pod 报错&apos;object_schema.hpp&apos; file not found</div></pre></td></tr></table></figure>
<ol>
<li>rm -rf Pods</li>
<li>rm -rf ~/Library/Caches/CocoaPods<br>```</li>
</ol>
</li>
<li>autorelease 是在runloop休息到下一次被唤醒之间被释放的</li>
<li>runloop mode 包括4种，NSTimer默认被添加到defaultmode中，所以计时器滚动的时候不会动.子线程中NSTimer如果runloop在跑，那么计时器会走</li>
<li>使用KVO监听数组<br>网上有许多大牛已经说得很详细了，这里就不多说了，放一个<a href="http://liumh.com/2015/08/22/ios-nsmutablearray-kvo/" target="_blank" rel="external">链接</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;项目开发过程中遇到的bug总结&quot;&gt;&lt;a href=&quot;#项目开发过程中遇到的bug总结&quot; class=&quot;headerlink&quot; title=&quot;项目开发过程中遇到的bug总结&quot;&gt;&lt;/a&gt;项目开发过程中遇到的bug总结&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;iOS 
    
    </summary>
    
    
      <category term="iOS" scheme="http://demoker.co/tags/iOS/"/>
    
  </entry>
  
</feed>
